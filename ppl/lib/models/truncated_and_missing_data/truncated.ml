open Effppl.Infer;;
open Effppl.Print;; 

let truncated_data obs_points ay () = 
	let* lb = normal (-2.5) 1. in 
	let* ub = normal (2.5) 1. in 

	for i = 0 to (obs_points-1) do 
		observe (mk ay.(i)) 
		(fun x -> 
			if (x < (get lb) || x > (get ub) ) then 
				-1000.0
			else 
				(Effppl.Primitive.logpdf Effppl.Primitive.(normal 0. 1.)) x 
		)
	done ;
	lb

in 

let epochs = 20000 in 
let ly = [-1.544427730726054 ;-0.8794146666542905 ;-0.9681904560443502 ;0.7717960527220408 ;0.2369373064224979 ;-1.0248763461254098 ;-1.0151494668417411 ;-0.39933854350504844 ;0.5404053197362991 ;0.2605661627920371 ;0.080664158239422 ;-0.8577869798288233 ;0.1514669452504063 ;0.602823217501092 ;0.8011214106083053 ;0.9758829839538514 ;-0.866214377639505 ;1.3420138655316756 ;-0.9104472004110395 ;-0.1876966696533097 ;-0.4043816923788878 ;1.340296703691652 ;-0.5311812851221611 ;0.7846460702055409 ;-0.657538497448217 ;1.7261287104902396 ;-1.6444705647170177 ;1.233575687048026 ;1.0205305073692623 ;-0.16548185598657372 ;0.5259299892337961 ;0.3229400489771022 ;1.6000222132693278 ;0.3780529465405708 ;0.04163112737568421 ;-0.03788184201374293 ;-1.2490246577707622 ;0.6163636361111948 ;-0.9160188976270596 ;-0.3543173677654691 ;-0.8593504403273671 ;-0.12723199663305645 ;-0.06536723886723392 ;0.5548895471917066 ;0.5001627003410566 ;0.3616186284480491 ;0.8254189354077196 ;-0.6495932294543517 ;1.1512767435352902 ;1.0855041092047866 ;1.009765641958459 ;1.901961785933384 ;-0.9019215403631262 ;0.34222312718154296 ;-0.2887096610211918 ;1.0568654148750873 ;0.47026932675517624 ;-1.5208438820665808 ;-1.4688695715410043 ] in 
let ay = Array.of_list ly in 
let fils = (hmc (truncated_data (List.length ly) ay) 4 0.02 epochs) in

let mcl = List.map (fun ls -> (List.nth ls 0, List.nth ls 1)) fils in 
let sm =  List.map (fun (ax, _) -> ax) mcl in  
let sma =  Array.of_list sm in  
let sc =  List.map (fun (_, ay) -> ay) mcl in  
let sca =  Array.of_list sc in  

let _ = Owl_stats.mean sma in 
let _ = Owl_stats.mean sca in

print_statistics sm;
print_to_file sm "lower bound";
(* print_normal_list sm; *)

print_statistics sc;
print_to_file sc "upper bound";

(* print_normal_list sc; *)
